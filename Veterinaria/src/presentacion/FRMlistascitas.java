/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import controlador.DAOcita;
import javax.swing.table.DefaultTableModel;
import controlador.DAOmascota;
import controlador.DAOmascota;
import java.io.File;
import modelo.cliente;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.awt.Desktop;
import java.io.IOException;
import modelo.ConexionMysql;
import java.sql.*;
import modelo.cita;
import modelo.mascota;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;



/** 
 * @author Esteban
 */
public class FRMlistascitas extends javax.swing.JInternalFrame {

    DAOcita obj= new DAOcita();
    
    public FRMlistascitas() {
        initComponents();
        verlista();
        btndel.setEnabled(false);
        btndel1.setEnabled(false);
 /*       btnmod.setEnabled(false);
         cbordenar.removeAllItems();
        cbordenar.addItem("--Seleccione--");
        cbordenar.addItem("Por nombre de mascota");
        cbordenar.addItem("Por nombre de propietario");
        */
    }
     void verlista(){
  DefaultTableModel dt = (DefaultTableModel)tblmascotas.getModel();
        dt.setRowCount(0);
        for (cita x:obj.listado2()){

            Object v [] = {x.getIdcita(), x.getMascota(), x.getFecha_hora(), x.getVeterinario(), x.getCliente(), x.getCorreo(),x.getCelular(), x.getEstado()};         
            dt.addRow(v);
            }
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnimp = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btndel = new javax.swing.JButton();
        lblcodigo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmascotas = new javax.swing.JTable();
        btndel1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("CITAS PROGRAMADAS");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnimp.setBackground(new java.awt.Color(0, 102, 102));
        btnimp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnimp.setText("Imprimir");
        btnimp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimpActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btndel.setBackground(new java.awt.Color(0, 102, 102));
        btndel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndel.setText("Cancelar");
        btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelActionPerformed(evt);
            }
        });

        lblcodigo.setForeground(new java.awt.Color(255, 255, 255));
        lblcodigo.setText("jLabel4");

        tblmascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CÃ³digo", "Mascota", "Fecha y Hora", "Veterinario", "Cliente", "Correo", "Celular", "Estado"
            }
        ));
        tblmascotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmascotasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmascotas);

        btndel1.setBackground(new java.awt.Color(0, 102, 102));
        btndel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndel1.setText("Activar");
        btndel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btndel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btndel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnimp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblcodigo)
                .addGap(221, 221, 221))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblcodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btndel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnimp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnimpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimpActionPerformed
    // Ruta del archivo JasperReport
/*String report = "D:\\UTP\\INTEGRADOR\\TRABAJOFINAL\\Veterinaria\\src\\presentacion\\ListadoMascotas.jasper";
JasperReport jr;
try {
    jr = JasperCompileManager.compileReport(report);
    
    // Crear un objeto JasperPrint utilizando el archivo compilado
    JasperPrint jasperPrint = JasperFillManager.fillReport(jr, null, new JREmptyDataSource());

    // Mostrar el informe en el visor JasperViewer
    JasperViewer.viewReport(jasperPrint);
} catch (Exception e) {
   
    e.printStackTrace();
}
*//*
 String jrxmlFile = "D:/UTP/INTEGRADOR/TRABAJOFINAL/Veterinaria/src/presentacion/report2.jrxml"; 
        String jasperFile = "D:/UTP/INTEGRADOR/TRABAJOFINAL/Veterinaria/src/presentacion/report2.jasper";

        try {
            // Compilar el archivo JRXML a un archivo Jasper
            JasperCompileManager.compileReportToFile(jrxmlFile, jasperFile);
            System.out.println("CompilaciÃ³n exitosa. Archivo Jasper generado: " + jasperFile);
        } catch (Exception e) {
            e.printStackTrace();
        }*/

String jasperFile = "src/reportes/citasprogramadas.jasper";

        try {
            // Cargar el archivo Jasper
            Connection con = ConexionMysql.getConexion();
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperFile, null,con);

            // Mostrar el informe en el visor JasperViewer
            JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnimpActionPerformed

    private void tblmascotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmascotasMouseClicked
           int f = tblmascotas.getSelectedRow();
        lblcodigo.setText(tblmascotas.getValueAt(f, 0).toString());
        btndel.setEnabled(true);
        btndel1.setEnabled(true);
       
          
    }//GEN-LAST:event_tblmascotasMouseClicked

    private void btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelActionPerformed
        int codigo = Integer.parseInt(lblcodigo.getText());
        cita c = new cita();
        c.setEstado("CANCELADO");
        c.setIdcita(codigo);
        obj.modifica(c);
        verlista();
       

    }//GEN-LAST:event_btndelActionPerformed

    private void btndel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndel1ActionPerformed
        // TODO add your handling code here:
        int codigo = Integer.parseInt(lblcodigo.getText());
        cita c = new cita();
        c.setEstado("ACTIVO");
        c.setIdcita(codigo);
        obj.modifica(c);
        verlista();
    }//GEN-LAST:event_btndel1ActionPerformed

    
  /*  void sortnombre(){ 
       DefaultTableModel dt = (DefaultTableModel) tblmascotas.getModel();
dt.setRowCount(0);

List<mascota> mascotas = obj.listado();
Collections.sort(mascotas, Comparator.comparing(mascota::getNombre)); // Sort the list by the "nombre" column

for (mascota x : mascotas) {
    Object[] v = {x.getId_mascota(), x.getNombre(), x.getEspecie(), x.getRaza(), x.getFecha_nac(), x.getSexo(), x.getPeso(), x.getCliente(), x.getInfadi()};
    dt.addRow(v);
}
    }*/
    
    
    
  /*      void sortpropietario(){
 DefaultTableModel dt = (DefaultTableModel) tblmascotas.getModel();
dt.setRowCount(0);

List<mascota> mascotas = obj.listado();
Collections.sort(mascotas, Comparator.comparing(mascota::getCliente)); // Sort the list by the "nombre" column

for (mascota x : mascotas) {
    Object[] v = {x.getId_mascota(), x.getNombre(), x.getEspecie(), x.getRaza(), x.getFecha_nac(), x.getSexo(), x.getPeso(), x.getCliente(), x.getInfadi()};
    dt.addRow(v);
}
  }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndel;
    private javax.swing.JButton btndel1;
    private javax.swing.JButton btnimp;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcodigo;
    private javax.swing.JTable tblmascotas;
    // End of variables declaration//GEN-END:variables
}
