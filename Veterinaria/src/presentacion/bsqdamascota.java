/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import javax.swing.table.DefaultTableModel;
import controlador.DAOmascota;
import modelo.cliente;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import modelo.mascota;
/** 
 * @author Esteban
 */
public class bsqdamascota extends javax.swing.JInternalFrame {
private FRMagenda agenda;
    DAOmascota obj = new DAOmascota();
    
    public void setFormulario2(FRMagenda agenda) {
    this.agenda = agenda;
    
    
}
    
    
    public bsqdamascota() {
        initComponents();
        verlista();
        
         cbordenar.removeAllItems();
        cbordenar.addItem("--Seleccione--");
        cbordenar.addItem("Por nombre de mascota");
        cbordenar.addItem("Por nombre de propietario");
        
    }
     void verlista(){
        DefaultTableModel dt = (DefaultTableModel)tblmascotas.getModel();
        dt.setRowCount(0);
        for (mascota x:obj.listado()){

            Object v [] = {x.getId_mascota(), x.getNombre(), x.getEspecie(),x.getRaza(),  x.getFecha_nac(), x.getSexo(),x.getPeso(),x.getCliente(),  x.getInfadi()};         
            dt.addRow(v);
            }
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtnom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtdni = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbordenar = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmascotas = new javax.swing.JTable();
        lblcodigo = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Listado de mascotas registrados");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtnom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomActionPerformed(evt);
            }
        });
        txtnom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnomKeyPressed(evt);
            }
        });

        jLabel3.setText("Filtro por nombre propietario");

        txtdni.setToolTipText("");
        txtdni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdniKeyPressed(evt);
            }
        });

        jLabel1.setText("Ordenar por");

        cbordenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbordenar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbordenarItemStateChanged(evt);
            }
        });
        cbordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbordenarActionPerformed(evt);
            }
        });

        jLabel2.setText("Filtro por nombre mascota");

        tblmascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CÃ³digo", "Nombre", "Especie", "Raza", "Nacimiento", "sexo", "peso", "Cliente", "Adicional"
            }
        ));
        tblmascotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmascotasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmascotas);

        lblcodigo.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtnom, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(129, 129, 129)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtdni, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(lblcodigo)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtdni, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblcodigo))
                    .addComponent(txtnom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbordenarActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_cbordenarActionPerformed

    private void cbordenarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbordenarItemStateChanged
       String selectedValue = (String) cbordenar.getSelectedItem();
       if (selectedValue == "Por nombre de mascota"){
       sortnombre();
       }else {
       sortpropietario();
       }
    }//GEN-LAST:event_cbordenarItemStateChanged

    private void txtnomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomActionPerformed

    private void txtnomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
         DefaultTableModel dt = (DefaultTableModel) tblmascotas.getModel();
dt.setRowCount(0);

String nombreFiltro = txtnom.getText(); // AquÃ­ puedes cambiar el valor por el nombre que deseas filtrar

for (mascota x : obj.listado()) {
    // Aplicar filtro por nombre
    if (x.getNombre().equalsIgnoreCase(nombreFiltro)) {
         Object v [] = {x.getId_mascota(), x.getNombre(), x.getEspecie(),x.getRaza(),  x.getFecha_nac(), x.getSexo(),x.getPeso(),x.getCliente(),  x.getInfadi()};         
            dt.addRow(v);
    }
}
        
        }
       
        
        
    }//GEN-LAST:event_txtnomKeyPressed

    private void txtdniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdniKeyPressed
    if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
         DefaultTableModel dt = (DefaultTableModel) tblmascotas.getModel();
dt.setRowCount(0);

String nombreFiltro = txtdni.getText(); // AquÃ­ puedes cambiar el valor por el nombre que deseas filtrar

for (mascota x : obj.listado()) {
    // Aplicar filtro por nombre
    if (x.getCliente().equalsIgnoreCase(nombreFiltro)) {
         Object v [] = {x.getId_mascota(), x.getNombre(), x.getEspecie(),x.getRaza(),  x.getFecha_nac(), x.getSexo(),x.getPeso(),x.getCliente(),  x.getInfadi()};         
            dt.addRow(v);
    }
}
        
        }
    }//GEN-LAST:event_txtdniKeyPressed

    private void tblmascotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmascotasMouseClicked
       int f = tblmascotas.getSelectedRow();
        lblcodigo.setText(tblmascotas.getValueAt(f, 0).toString());
        
        
       String mascota = (tblmascotas.getValueAt(f, 1).toString());
       String valorTextBoxFormulario2 = mascota;
       String codigo = lblcodigo.getText();
    // Establecer el valor en el TextBox del formulario 1
     agenda.setValorTextBox2(valorTextBoxFormulario2,codigo);
    dispose();
        
    }//GEN-LAST:event_tblmascotasMouseClicked

     
    
    void sortnombre(){ 
       DefaultTableModel dt = (DefaultTableModel) tblmascotas.getModel();
dt.setRowCount(0);

List<mascota> mascotas = obj.listado();
Collections.sort(mascotas, Comparator.comparing(mascota::getNombre)); // Sort the list by the "nombre" column

for (mascota x : mascotas) {
    Object[] v = {x.getId_mascota(), x.getNombre(), x.getEspecie(), x.getRaza(), x.getFecha_nac(), x.getSexo(), x.getPeso(), x.getCliente(), x.getInfadi()};
    dt.addRow(v);
}
    }
    
    
    
        void sortpropietario(){
 DefaultTableModel dt = (DefaultTableModel) tblmascotas.getModel();
dt.setRowCount(0);

List<mascota> mascotas = obj.listado();
Collections.sort(mascotas, Comparator.comparing(mascota::getCliente)); // Sort the list by the "nombre" column

for (mascota x : mascotas) {
    Object[] v = {x.getId_mascota(), x.getNombre(), x.getEspecie(), x.getRaza(), x.getFecha_nac(), x.getSexo(), x.getPeso(), x.getCliente(), x.getInfadi()};
    dt.addRow(v);
}
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbordenar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcodigo;
    private javax.swing.JTable tblmascotas;
    private javax.swing.JTextField txtdni;
    private javax.swing.JTextField txtnom;
    // End of variables declaration//GEN-END:variables
}
